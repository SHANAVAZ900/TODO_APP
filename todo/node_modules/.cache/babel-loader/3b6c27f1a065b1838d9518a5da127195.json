{"ast":null,"code":"var _jsxFileName = \"D:\\\\Todo\\\\TODO_APP\\\\TODO_APP\\\\todo\\\\src\\\\pages\\\\CreateTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateTask({\n  modal,\n  toggle,\n  save\n}) {\n  _s();\n\n  const [taskName, setTaskName] = useState(\"\");\n  console.log(taskName);\n  const [description, setDescription] = useState(\"\");\n  console.log(description);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === taskName) {\n      setTaskName(value);\n    } else {\n      setDescription(value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: toggle,\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: taskName,\n            onChange: handleChange,\n            name: \"taskName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"5\",\n            className: \"form-control\",\n            value: description,\n            onChange: handleChange,\n            name: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: toggle,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        onClick: toggle,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateTask, \"b+RobfBmciHP/BsDFsrMkCJC/wc=\");\n\n_c = CreateTask;\nexport default CreateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"sources":["D:/Todo/TODO_APP/TODO_APP/todo/src/pages/CreateTask.js"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","CreateTask","modal","toggle","save","taskName","setTaskName","console","log","description","setDescription","handleChange","e","name","value","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,QAAmE,YAAnE;;;AAEA,SAASC,UAAT,CAAoB;AAACC,EAAAA,KAAD;AAAOC,EAAAA,MAAP;AAAcC,EAAAA;AAAd,CAApB,EAAyC;AAAA;;AACrC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;;AAEA,QAAME,YAAY,GAAGC,CAAD,IAAM;AACtB,UAAK;AAACC,MAAAA,IAAD;AAAMC,MAAAA;AAAN,QAAeF,CAAC,CAACG,MAAtB;;AAEA,QAAGF,IAAI,KAAKR,QAAZ,EAAqB;AACjBC,MAAAA,WAAW,CAACQ,KAAD,CAAX;AACH,KAFD,MAEK;AACDJ,MAAAA,cAAc,CAACI,KAAD,CAAd;AACH;AACJ,GARD;;AAUA,sBACI,QAAC,KAAD;AAAO,IAAA,MAAM,EAAEZ,KAAf;AAAsB,IAAA,MAAM,EAAEC,MAA9B;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,SAAD;AAAA,6BACI;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,cAA7B;AAA4C,YAAA,KAAK,EAAEE,QAAnD;AAA6D,YAAA,QAAQ,EAAEM,YAAvE;AAAqF,YAAA,IAAI,EAAC;AAA1F;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAU,YAAA,IAAI,EAAC,GAAf;AAAmB,YAAA,SAAS,EAAC,cAA7B;AAA4C,YAAA,KAAK,EAAEF,WAAnD;AAAgE,YAAA,QAAQ,EAAEE,YAA1E;AAAwF,YAAA,IAAI,EAAC;AAA7F;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAmBI,QAAC,WAAD;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAER,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAGc,GAHd,eAII,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,WAAd;AAA0B,QAAA,OAAO,EAAEA,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;GA9CQF,U;;KAAAA,U;AAgDT,eAAeA,UAAf","sourcesContent":["import React,{useState} from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nfunction CreateTask({modal,toggle,save}) {\r\n    const [taskName, setTaskName] = useState(\"\");\r\n    console.log(taskName)\r\n    const [description, setDescription] = useState(\"\");\r\n    console.log(description)\r\n\r\n    const handleChange =(e) =>{\r\n        const{name,value} = e.target\r\n\r\n        if(name === taskName){\r\n            setTaskName(value)\r\n        }else{\r\n            setDescription(value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>\r\n                Create Task\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label>Task Name</label>\r\n                        <input type=\"text\" className=\"form-control\" value={taskName} onChange={handleChange} name=\"taskName\"/>\r\n\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Description</label>\r\n                        <textarea rows=\"5\" className=\"form-control\" value={description} onChange={handleChange} name=\"description\"></textarea>\r\n\r\n                    </div>\r\n                </form>\r\n                \r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" onClick={toggle}>\r\n                   Create\r\n                </Button>{' '}\r\n                <Button color=\"secondary\" onClick={toggle}>\r\n                    Cancel\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CreateTask\r\n"]},"metadata":{},"sourceType":"module"}